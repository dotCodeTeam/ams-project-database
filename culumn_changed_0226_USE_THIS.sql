DROP DATABASE IF EXISTS AMSDB;
CREATE DATABASE IF NOT EXISTS AMSDB;

USE AMSDB;

-- ADMIN(관리 직책 테이블 생성)
DROP TABLE IF EXISTS ADMIN_CATEGORY;
CREATE TABLE IF NOT EXISTS ADMIN_CATEGORY
(
    ADMIN_CODE    VARCHAR(20) NOT NULL,
    ADMIN_NAME    VARCHAR(255) NOT NULL,
 PRIMARY KEY (ADMIN_CODE)
);

-- ADMIN 
INSERT INTO ADMIN_CATEGORY
	(ADMIN_CODE, ADMIN_NAME) VALUES
    ('S0', '관리자'),
	('S1', '일반사원');

-- JOB(직급 테이블 생성)
DROP TABLE IF EXISTS JOB_CATEGORY;
CREATE TABLE IF NOT EXISTS JOB_CATEGORY
(
    JOB_CODE    VARCHAR(20) NOT NULL,
    JOB_NAME    VARCHAR(255) NOT NULL,
 PRIMARY KEY ( JOB_CODE )
);

-- JOB 테이블에 직책 코드 , 직책 이름 생성
INSERT INTO JOB_CATEGORY
	(JOB_CODE, JOB_NAME) VALUES
    ('J1', '사원'),
    ('J2', '대리'),
    ('J3', '과장'),
    ('J4', '차장'),
    ('J5', '부장'),
    ('J6', '사장');

DROP TABLE IF EXISTS STATUS_CATEGORY;
CREATE TABLE IF NOT EXISTS STATUS_CATEGORY
(
	STATUS_CODE	VARCHAR(20) NOT NULL,
    STATUS_NAME VARCHAR(20) NOT NULL,
    PRIMARY KEY ( STATUS_CODE )
);

INSERT INTO STATUS_CATEGORY
VALUES  ('A1','근무중')
	,	('A2','퇴근')
	,	('B1','출장')
    ,	('B2','외출')
    ,	('C1','월차')
    ,	('C2','연차')
    ,	('D1','병가')
;

-- EMPLOYEE(사원정보 테이블 생성)
DROP TABLE IF EXISTS EMPLOYEE;
CREATE TABLE IF NOT EXISTS EMPLOYEE
(
    EMP_NO    		INTEGER AUTO_INCREMENT NOT NULL,
    EMP_ID    		VARCHAR(20) UNIQUE NOT NULL,
    EMP_PW    		VARCHAR(20) NOT NULL,
    EMP_NAME    	VARCHAR(20) NOT NULL,
	STATUS_CODE 	VARCHAR(20) NOT NULL,
    JOB_CODE    	VARCHAR(20) NOT NULL,
    EMP_HIREDATE    DATE NOT NULL,
    PHONE    		VARCHAR(20) NOT NULL,
    EMAIL			VARCHAR(255) NOT NULL,
    ADMIN_CODE    	VARCHAR(20) NOT NULL,
 PRIMARY KEY ( EMP_NO ),
 FOREIGN KEY(ADMIN_CODE) REFERENCES ADMIN_CATEGORY(ADMIN_CODE),
 FOREIGN KEY(JOB_CODE) REFERENCES JOB_CATEGORY(JOB_CODE),
 FOREIGN KEY(STATUS_CODE) REFERENCES STATUS_CATEGORY(STATUS_CODE)
);
DESCRIBE EMPLOYEE;
-- EMP_ID 열에 중복을 방지하는 UNIQUE 제약 조건 추가
# ALTER TABLE EMPLOYEE ADD CONSTRAINT UNIQUE (EMP_ID);

INSERT INTO EMPLOYEE 
VALUES (NULL,'eunSung', '1234', '조은성','A1', 'J6', STR_TO_DATE('20230201','%Y%m%d'), '010-1234-1234', '은성@gamil.com', 'S0')
	  ,  (NULL, 'sooBin', '5678', '윤수빈','A1', 'J5', STR_TO_DATE('20230210','%Y%m%d'), '010-1234-5678', '수빈@gamil.com', 'S0')
	  ,  (NULL, 'youngSang', '1357', '고영상','A1', 'J3', STR_TO_DATE('20230215','%Y%m%d'), '010-1357-1357', '영상@gamil.com', 'S1')
      ,  (NULL, 'chanWool', '8520', '임찬울','A1', 'J2', STR_TO_DATE('20230217','%Y%m%d'), '010-8520-1234', '찬울@gamil.com', 'S1')
      ,  (NULL, 'jinHyun', '0258', '박진현','A1', 'J1', STR_TO_DATE('20230220','%Y%m%d'), '010-0258-1234', '진현@gamil.com', 'S1');

# SELECT MAX(EMP_NO) FROM EMPLOYEE; 

-- ATTENDANCE(근태 테이블 생성)
DROP TABLE IF EXISTS ATTENDANCE;
CREATE TABLE IF NOT EXISTS ATTENDANCE
(
	EMP_NO   		INTEGER NOT NULL,
    TOTAL_DAY_COUNT INTEGER NOT NULL,
    ONTIME_COUNT    INTEGER NOT NULL,
    LATE_COUNT    	INTEGER NOT NULL,
    ABSENT_COUNT    INTEGER NOT NULL,
    TOTAL_SCORE    	INTEGER NOT NULL,
    /* OFFTIME_STATUS    VARCHAR(4) NOT NULL, */   
    FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(EMP_NO)
);
/* -- OFFTIME_STATUS에서 CHECK 제약조건을 추가하여 '예', '아니오' 만 입력할 수 있게끔 지정해놓는다.
ALTER TABLE ATTENDANCE
	ADD CONSTRAINT
    CHECK (OFFTIME_STATUS IN ('YES', 'NO')); 
*/
INSERT INTO ATTENDANCE(
						EMP_NO
					,	TOTAL_DAY_COUNT
                    ,	ONTIME_COUNT
                    ,	LATE_COUNT
                    ,	ABSENT_COUNT
                    ,	TOTAL_SCORE
						)
VALUES (1,1,1,0,0,100)
	,	(2,1,1,0,0,100)
    ,	(3,1,1,0,0,100)
    ,	(4,1,1,0,0,100)
    ,	(5,1,1,0,0,100);

DROP TABLE IF EXISTS VACANT;
CREATE TABLE IF NOT EXISTS VACANT
(
	VACANT_NO			INTEGER AUTO_INCREMENT NOT NULL,
    EMP_NO            	INTEGER NOT NULL,
    STATUS_CODE   		VARCHAR(20) NOT NULL,
	APPLY_DATE   		DATE NOT NULL,
    DAY_DATE     		DATE NOT NULL,
    CAUSE    			VARCHAR(255) NULL,
    ACCEPT_STATUS		VARCHAR(4) NULL CHECK ( ACCEPT_STATUS IN ('Y','N') ),
 PRIMARY KEY ( VACANT_NO ),
 FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEE(EMP_NO),
 FOREIGN KEY (STATUS_CODE) REFERENCES STATUS_CATEGORY(STATUS_CODE)
);
-- ALTER TABLE VACANT ADD CONSTRAINT UNIQUE (VACANT_DATE);
/* ALTER TABLE VACANT
	ADD CONSTRAINT
    CHECK (ACCEPT_STATUS IN ('Y', 'N')); */

INSERT INTO VACANT
VALUES (NULL,1,'C2',STR_TO_DATE('20230225','%Y%m%d'),STR_TO_DATE('20230301','%Y%m%d'),'자체휴가', NULL);

-- DOCUMENT(증빙서류)테이블 생성
-- DROP TABLE DOCUMENT;
/* CREATE TABLE DOCUMENT
(
    DOCUMENT_CODE INT AUTO_INCREMENT NOT NULL,
    EMP_NO INT NOT NULL,
    VACANT_CATEGORY INT NOT NULL,# PRIMARY KEY ( DOCUMENT_CODE ),
 FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEE(EMP_NO),
 FOREIGN KEY (VACANT_CATEGORY) REFERENCES VACANT(VACANT_CATEGORY)
); */


INSERT INTO ATTENDANCE (EMP_NO, TOTAL_DAY_COUNT, ONTIME_COUNT, LATE_COUNT, ABSENT_COUNT, TOTAL_SCORE)
SELECT 
    EMPLOYEE.EMP_NO,
    DATEDIFF(NOW(), EMPLOYEE.EMP_HIREDATE) AS TOTAL_DAY_COUNT,
    0 AS ONTIME_COUNT,
    0 AS LATE_COUNT,
    0 AS ABSENT_COUNT,
    0 AS TOTAL_SCORE
FROM 
    EMPLOYEE;


commit;
